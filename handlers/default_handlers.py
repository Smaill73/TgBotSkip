from aiogram import Router, types, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from db import add_user

router = Router()

def main_menu_kb():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="1Ô∏è‚É£ –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è", callback_data="my_ads")],
            [InlineKeyboardButton(text="2Ô∏è‚É£ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π", callback_data="view_ads")],
            [InlineKeyboardButton(text="3Ô∏è‚É£ –í—ã–ª–æ–∂–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", callback_data="new_ad")],
        ]
    )

@router.message(Command("start"))
async def start_cmd(msg: types.Message):
    add_user(msg.from_user.id, msg.from_user.username or "")
    await msg.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –∞—Ä–µ–Ω–¥–µ —Ç–µ—Ö–Ω–∏–∫–∏!\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.",
        reply_markup=main_menu_kb()
    )

@router.message(Command("menu"))
async def menu_cmd(msg: types.Message):
    await msg.answer(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=main_menu_kb()
    )

@router.callback_query(F.data == "my_ads")
async def main_menu_my_ads(callback: types.CallbackQuery):
    from handlers.advertisements import my_ads_menu
    await my_ads_menu(callback)

@router.callback_query(F.data == "view_ads")
async def main_menu_view_ads(callback: types.CallbackQuery):
    from handlers.viewing import view_ads_menu
    await view_ads_menu(callback)

@router.callback_query(F.data == "new_ad")
async def main_menu_new_ad(callback: types.CallbackQuery, state: FSMContext):
    from handlers.publication import start_publication
    await start_publication(callback, state)

# --- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ FSM ---
@router.message(StateFilter(None))
async def unknown_message(msg: types.Message):
    await msg.answer(
        "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã /menu, /start."
    )

def register(dp):
    dp.include_router(router)
